<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--1. properties 引入资源 resource:类路径, url:网络路径 -->
    <properties resource="dbconfig.properties"></properties>
<!--    2. 设置开启驼峰命名规范-->
    <settings>
        <setting name="mapUnderscoreToCamelCase" value="true"/>
    </settings>

<!--    3. typeAliases别名处理器, 为java类型起别名(别名不区分大小写)-->
    <typeAliases>
<!--        type: 全类名, 默认类名小写, alias: 别名-->
<!--        <typeAlias type="com.csts.mybatis.bean.Employee" alias="emp"/>-->
        
<!--        为某个包下所有类批量起别名, name: 包名(为当前及以下所有包的每个类都起别名, 类名小写)
            类名冲突可在类上用@Alias("emp")注解声明指定别名名称
-->
        <package name="com.csts.mybatis.bean"/>
    </typeAliases>
    
    
    
<!--    4. environments:配置多环境, default指定使用的环境
            transactionManager: 事务管理器
-->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <!--sql映射文件注册到全局配置文件中 -->
        <mapper resource="EmployeeMapper.xml"/>
        <!--class 注册接口: 1. 有sql映射文件, 映射文件必须和接口同名, 并且同目录下(重要的, 复杂的写映射文件)
                          2. 没有sql映射文件, 所有sql用注解写在接口上 (不重要的, 简单的, 写注解)         -->
        <mapper class="com.csts.mybatis.dao.EmployeeMapperAnnotation"/>
    </mappers>

</configuration>